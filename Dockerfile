
# Stage 1: Build the application
# This stage includes dev dependencies and builds the Next.js app
FROM node:18-alpine AS builder
WORKDIR /app

# Copy package files and install ALL dependencies (including dev dependencies)
COPY package*.json ./
RUN npm ci

# Copy source code and build the application
COPY . .

# Generate Prisma client before building
RUN npm run db:generate

# Accept build arguments
# These arguments need to be passed when building the image
ARG NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
ARG NEXT_PUBLIC_CLERK_SIGN_IN_URL
ARG NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL
ARG NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL


ENV NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
ENV NEXT_PUBLIC_CLERK_SIGN_IN_URL=${NEXT_PUBLIC_CLERK_SIGN_IN_URL}
ENV NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL=${NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL}
ENV NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL=${NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL}


# Disable Next.js telemetry during build for privacy and faster builds
ENV NEXT_TELEMETRY_DISABLED=1
# Build the Next.js application (creates optimized production build)
RUN npm run build

# Stage 2: Production runtime
# This is the final stage that will be used in production
FROM node:18-alpine AS runner
WORKDIR /app

# Set production environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=5000
ENV HOSTNAME="0.0.0.0"

# Create a non-root user for security
# Running as non-root is a security best practice
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy static files from builder stage
# Public folder contains static assets that don't change
COPY --from=builder /app/public ./public

# Copy the standalone server and static files
# Next.js standalone output includes a minimal server and all dependencies
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
# Static files are optimized assets generated during build
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Switch to non-root user for security
USER nextjs

# Expose the port the app runs on
EXPOSE 5000

# Start the Next.js server
# server.js is generated by Next.js standalone
CMD ["node", "server.js"]
